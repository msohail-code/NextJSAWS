{"ast":null,"code":"import _toConsumableArray from \"C:/Users/ACS/Downloads/Compressed/client-master_2/client-master/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"C:/Users/ACS/Downloads/Compressed/client-master_2/client-master/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\nimport { createWrapper, HYDRATE } from 'next-redux-wrapper';\nimport thunkMiddleware from \"redux-thunk\";\nvar initState = {\n  currency: {\n    code: \"THB\",\n    id: 4,\n    status: 1,\n    title: \"THB\",\n    value: 1\n  }\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case HYDRATE:\n      var nextState = _objectSpread({}, state);\n\n      return nextState;\n\n    case 'SET_CURRENCY':\n      var nextStateup = _objectSpread(_objectSpread({}, state), {\n        currency: action.payload\n      });\n\n      return nextStateup;\n\n    case 'ADD_TO_CART':\n      var cartAfterAdd = _objectSpread(_objectSpread({}, state), {\n        cartId: action.payload\n      });\n\n      return cartAfterAdd;\n\n    case 'SET_CART_ITEMS':\n      var cartAfterRemove = _objectSpread(_objectSpread({}, state), {\n        cartItems: action.payload\n      });\n\n      return cartAfterRemove;\n\n    case 'USER_LOGIN':\n      var afterLogin = _objectSpread(_objectSpread({}, state), {\n        auth: action.payload\n      });\n\n      return afterLogin;\n\n    case 'SET_ORDER':\n      var afterOrder = _objectSpread(_objectSpread({}, state), {\n        order: action.payload\n      });\n\n      return afterOrder;\n\n    case 'CLEART_CART':\n      var beforeClearCart = _objectSpread(_objectSpread({}, state), {\n        cartItems: 0\n      });\n\n      delete beforeClearCart.cartId;\n      return beforeClearCart;\n\n    case 'SIGN_OUT':\n      var afterLogout = _objectSpread({}, state);\n\n      delete afterLogout.auth;\n      return afterLogout;\n\n    case 'SET_CART_DATA':\n      var afterCartData = _objectSpread(_objectSpread({}, state), {\n        cartData: action.payload\n      });\n\n      return afterCartData;\n\n    case 'SET_WISH_LIST':\n      var wishlistData = _objectSpread(_objectSpread({}, state), {\n        wishlist: action.payload\n      });\n\n      return wishlistData;\n\n    case 'SET_CSRF':\n      var cs = _objectSpread(_objectSpread({}, state), {\n        csrf: action.payload\n      });\n\n      return cs;\n\n    default:\n      return state;\n  }\n};\n\nvar combinedReducer = combineReducers({\n  config: reducer\n}); // BINDING MIDDLEWARE\n\nvar bindMiddleware = function bindMiddleware(middleware) {\n  if (true) {\n    var _require = require(\"redux-devtools-extension\"),\n        composeWithDevTools = _require.composeWithDevTools;\n\n    return composeWithDevTools(applyMiddleware.apply(void 0, _toConsumableArray(middleware)));\n  }\n\n  return applyMiddleware.apply(void 0, _toConsumableArray(middleware));\n};\n\nvar makeStore = function makeStore(_ref) {\n  var isServer = _ref.isServer;\n\n  if (isServer) {\n    //If it's on server side, create a store\n    return createStore(combinedReducer, bindMiddleware([thunkMiddleware]));\n  } else {\n    //If it's on client side, create a store which will persist\n    var _require2 = require(\"redux-persist\"),\n        persistStore = _require2.persistStore,\n        persistReducer = _require2.persistReducer;\n\n    var storage = require(\"redux-persist/lib/storage\")[\"default\"];\n\n    var persistConfig = {\n      key: \"gandhiStore\",\n      whitelist: [\"config\"],\n      // only counter will be persisted, add other reducers if needed\n      storage: storage // if needed, use a safer storage\n\n    };\n    var persistedReducer = persistReducer(persistConfig, combinedReducer); // Create a new reducer with our existing reducer\n\n    var store = createStore(persistedReducer, bindMiddleware([thunkMiddleware])); // Creating the store again\n\n    store.__persistor = persistStore(store); // This creates a persistor object & push that persisted object to .__persistor, so that we can avail the persistability feature\n\n    return store;\n  }\n}; // export an assembled wrapper\n\n\nexport var wrapper = createWrapper(makeStore);","map":{"version":3,"sources":["C:/Users/ACS/Downloads/Compressed/client-master_2/client-master/src/redux/store.js"],"names":["combineReducers","createStore","applyMiddleware","createWrapper","HYDRATE","thunkMiddleware","initState","currency","code","id","status","title","value","reducer","state","action","type","nextState","nextStateup","payload","cartAfterAdd","cartId","cartAfterRemove","cartItems","afterLogin","auth","afterOrder","order","beforeClearCart","afterLogout","afterCartData","cartData","wishlistData","wishlist","cs","csrf","combinedReducer","config","bindMiddleware","middleware","require","composeWithDevTools","makeStore","isServer","persistStore","persistReducer","storage","persistConfig","key","whitelist","persistedReducer","store","__persistor","wrapper"],"mappings":"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","sourcesContent":["import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport { createWrapper, HYDRATE } from 'next-redux-wrapper';\nimport thunkMiddleware from \"redux-thunk\";\n\nlet initState = {\n    currency: {\n        code: \"THB\",\n        id: 4,\n        status: 1,\n        title: \"THB\",\n        value: 1\n    }\n}\n\nconst reducer = (state = initState, action) => {\n    switch (action.type) {\n        case HYDRATE:\n            let nextState = { ...state }\n            return nextState\n        case 'SET_CURRENCY':\n            let nextStateup = { ...state, ...{ currency: action.payload } }\n            return nextStateup\n        case 'ADD_TO_CART':\n            let cartAfterAdd = { ...state, ...{ cartId: action.payload } }\n            return cartAfterAdd\n        case 'SET_CART_ITEMS':\n            let cartAfterRemove = { ...state, ...{ cartItems: action.payload } }\n            return cartAfterRemove\n        case 'USER_LOGIN':\n            let afterLogin = { ...state, ...{ auth: action.payload } }\n            return afterLogin;\n        case 'SET_ORDER':\n            let afterOrder = { ...state, ...{ order: action.payload } };\n            return afterOrder;\n        case 'CLEART_CART':\n            let beforeClearCart = { ...state, ...{ cartItems: 0 } };\n            delete beforeClearCart.cartId;\n            return beforeClearCart;\n        case 'SIGN_OUT':\n            let afterLogout = { ...state };\n            delete afterLogout.auth;\n            return afterLogout;\n        case 'SET_CART_DATA':\n            let afterCartData = { ...state, ...{ cartData: action.payload } };\n            return afterCartData;\n        case 'SET_WISH_LIST':\n            let wishlistData = { ...state, ...{ wishlist: action.payload } };\n            return wishlistData;\n        case 'SET_CSRF':\n            let cs = { ...state, ...{ csrf: action.payload } }\n            return cs;\n        default:\n            return state;\n    }\n};\n\nconst combinedReducer = combineReducers({\n    config: reducer\n})\n\n\n// BINDING MIDDLEWARE\nconst bindMiddleware = (middleware) => {\n    if (process.env.NODE_ENV !== \"production\") {\n        const { composeWithDevTools } = require(\"redux-devtools-extension\");\n        return composeWithDevTools(applyMiddleware(...middleware));\n    }\n    return applyMiddleware(...middleware);\n};\n\nconst makeStore = ({ isServer }) => {\n    if (isServer) {\n        //If it's on server side, create a store\n        return createStore(combinedReducer, bindMiddleware([thunkMiddleware]));\n    } else {\n        //If it's on client side, create a store which will persist\n        const { persistStore, persistReducer } = require(\"redux-persist\");\n        const storage = require(\"redux-persist/lib/storage\").default;\n\n        const persistConfig = {\n            key: \"gandhiStore\",\n            whitelist: [\"config\"], // only counter will be persisted, add other reducers if needed\n            storage, // if needed, use a safer storage\n        };\n\n        const persistedReducer = persistReducer(persistConfig, combinedReducer); // Create a new reducer with our existing reducer\n\n        const store = createStore(\n            persistedReducer,\n            bindMiddleware([thunkMiddleware])\n        ); // Creating the store again\n\n        store.__persistor = persistStore(store); // This creates a persistor object & push that persisted object to .__persistor, so that we can avail the persistability feature\n\n        return store;\n    }\n};\n\n// export an assembled wrapper\nexport const wrapper = createWrapper(makeStore);"]},"metadata":{},"sourceType":"module"}