{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ACS\\\\Downloads\\\\Compressed\\\\client-master_2\\\\client-master\\\\src\\\\pages\\\\sale.js\";\nimport Header from \"../pages/header\";\nimport Footer from \"../pages/footer\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport Head from \"next/head\";\nimport Products from \"../components/products\";\nexport var __N_SSP = true;\nexport default function Search(category) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: category.metaTitle ? category.metaTitle : category.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: category.metaDescription ? category.metaDescription : category.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      shadow: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Products, {\n      category: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/ACS/Downloads/Compressed/client-master_2/client-master/src/pages/sale.js"],"names":["Header","Footer","Fragment","useEffect","useState","Head","Products","Search","category","metaTitle","name","metaDescription","description"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA8C,OAA9C;AAGA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,eAAe,SAASC,MAAT,CAAgBC,QAAhB,EAA0B;AACrC,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA,kBAAQA,QAAQ,CAACC,SAAT,GAAqBD,QAAQ,CAACC,SAA9B,GAA0CD,QAAQ,CAACE;AAA3D;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,QAAQ,CAACG,eAAT,GAA2BH,QAAQ,CAACG,eAApC,GAAsDH,QAAQ,CAACI;AAAjG;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,MAAD;AAAQ,MAAA,MAAM;AAAd;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEJ;AAApB;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;KAZuBD,M","sourcesContent":["import Header from \"../pages/header\";\nimport Footer from \"../pages/footer\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport { wrapper } from \"../redux/store\";\nimport axios from \"axios\";\nimport Head from \"next/head\";\nimport Products from \"../components/products\";\n\nexport default function Search(category) {\n    return (\n        <Fragment>\n            <Head>\n                <title>{category.metaTitle ? category.metaTitle : category.name}</title>\n                <meta name=\"description\" content={category.metaDescription ? category.metaDescription : category.description} />\n            </Head>\n            <Header shadow />\n            <Products category={category} />\n            <Footer />\n        </Fragment >\n    );\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n    const limit = 30;\n    const page = parseInt(context.query.page || 1);\n    const { locale } = context\n    try {\n        let queryParams = context.query;\n        let offset = (page - 1) * limit\n\n        const headers = { headers: { lang: locale === \"en\" ? \"\" : locale } }\n\n        queryParams = { ...queryParams, ...{ limit: limit, offset: offset } }\n        queryParams = new URLSearchParams(queryParams)\n        let products = await axios.get(`${process.env.API_URL}category/products/sale?${queryParams}`, headers)\n\n        let category = {\n            name: \"Items On Sale\",\n            description: \"Discounted Products\"\n        }\n\n        category.products = products.data.rows;\n        category.totalCount = products.data.count;\n        category.limit = limit;\n        category.page = page;\n        category.totalPages = Math.ceil(products.data.count / limit);\n        category.isSale = true;\n\n        return {\n            props: category\n        }\n    } catch (error) {\n        return {\n            notFound: true,\n        }\n    }\n})"]},"metadata":{},"sourceType":"module"}